#This playbook is the "middle" loop 
#Replace %%% with names of variables

- name: Reboot to Defaults. Beginning Factor {{current_factor_list}} ({{ansible_loop.index}} of {{ansible_loop.length}})
  reboot:
  become: yes
  tags: skippable

  #If any configuration changes are not undone with a reboot,
  #add a playbook here to manually "revert" them

- name: Set Static Controls
  include_tasks: template-static-controls.yml

- name: Set Variable Factor Controls
  include_tasks: template-variable-controls.yml

- name: Copy Performance Monitor
  copy:
    src: gather_stats.bash
    dest: "{{experiment_dir}}/gather_stats.bash"
    mode: '0755'

  #Run repeats
- name: Begin Inner Loop
  include_tasks: template-benchmark-innerloop.yml
  loop: "{{ replicates }}"
  loop_control:
    extended: yes
    loop_var: inner_counter
    index_var: inner_idx
  tags: workload
  
- name: End of Run Best Mean Test {{test_counter}}
  local_action:
    module: shell
    _raw_params: |
        python best-mean.py 'results/{{ inventory_hostname }}-results-run{{test_counter}}.csv' <<%%%RESPONSE VARIABLE%%%>> "{{target_to_beat}}"
  register: anova
  tags: anova
  #if the last item in loop and not inital run
  when: "ansible_loop.revindex == 1 and test_counter > 1"
  changed_when: false
  ignore_errors: yes

- name: Update Last Middle Loop Best
  set_fact:
   last_loop_best: "{{anova.stdout_lines[anova.stdout_lines|length -3]|int}}"
   significant_factors_array: "{{anova.stdout_lines[anova.stdout_lines|length -1].split(\",\")}}"
   significant_factors_string: "{{anova.stdout_lines[anova.stdout_lines|length -1]}}"
   significant_factors_history: "{{significant_factors_history}} + [ '{{anova.stdout_lines[anova.stdout_lines|length -1]}}' ]"
   last_loop_best_history: "{{last_loop_best_history}} + [ '{{anova.stdout_lines[anova.stdout_lines|length -3]|int}}' ]"
  when: "ansible_loop.revindex == 1 and test_counter > 1"

