
- name: Set Receive Offloads
  command: "ethtool -K {{ capture_interface }} lro {{ lro_status }} gro {{ gro_status }} rx {{ rx_checksum_status }}"
  become: yes

- name: Enable Capture Interface and Set Promiscuous
  shell: |
    ifconfig {{ capture_interface }} promisc
    ifconfig {{ capture_interface }} up
  become: yes

  #When Disk I/O is very important. Also lifetime of flash...
- name: Disable Swap 
  shell: swapoff -a
  become: yes

- name: Bump RPi Throttling Temp (3B+ only)
  lineinfile:
    path: /boot/config.txt
    regex: "temp_soft_limit="
    line: temp_soft_limit=70.0
  when: "'nvidia' not in group_names"
  become: yes

- name: Set MAXN Power Profile on NVIDIA Boards
  shell: |
    nvpmodel -m 0
    jetson_clocks
  become: yes
  when: "'nvidia' in group_names"

- name: Disable Flow Control On Send Interface
  local_action:
      module: shell
      _raw_params: sudo ethtool -A {{ send_interface }} autoneg off tx off rx off
      args:
          warn: false
  register: local_result
  failed_when: "'Cannot' in local_result.stderr"

- name: Disable Offloads on Send Interface
  local_action:
      module: shell
      _raw_params: "sudo ethtool -K {{ send_interface }} gso off tso off gro off lro off tx off"
      args:
          warn: false

- name: Set RX Packet Timestamping
  shell: sysctl -w net.core.netdev_tstamp_prequeue={{ rx_timestamp_status }}
  become: yes

#### VALUES INHERITED FROM PREVIOUS TESTS####

  #Former Factor A from interface test
- name: Increase NAPI Budget 
  shell: sysctl -w net.core.netdev_budget={{NAPI_budget_best}}
  become: yes
  
  #Former Factor B from interface test
- name:  Set Kernel Max Backlog
  shell: sysctl -w net.core.netdev_max_backlog={{backlog_best}}
  become: yes   
  
  #Former Factor C from interface test
- name: Enable / Set Receive Packet Steering Affinity
  shell: "echo {{ rps_mask }} > /sys/class/net/{{capture_interface}}/queues/rx-0/rps_cpus"
  become: yes
  
  #Former Factor E from interface/pcap test 
- name: Set Backlog Loop Weight
  shell: sysctl -w net.core.dev_weight={{backlog_weight_best}}
  become: yes
 
  #Factor A from Suricata test
- name: Set Suricata Runmode
  lineinfile:
      path: "{{sensor_dir}}/suricata.yml"
      state: present
      regexp: 'runmode: autofp '
      line: "runmode: {{ suricata_runmode_best }}"

  #Factor B from Suricata test
- name: Set Max-Pending-Packets 
  lineinfile:
    path: "{{sensor_dir}}/suricata.yml"
    state: present
    regexp: 'max-pending-packets: 1024'
    line: "max-pending-packets: {{ suricata_max_pending_best }}"

  
  #Factor C from Suricata test
- name: Set Detect Profile 
  lineinfile:
    path: "{{sensor_dir}}/suricata.yml"
    state: present
    regexp: '  profile: medium'
    line: "  profile: {{ suricata_detect_profile_best }}"

  #Factor D from Suricata test
- name: Set Receive Flow Steering (RFS) Table Size
  shell: |
    sysctl -w net.core.rps_sock_flow_entries="{{ rfs_best }}"
    echo "{{ rfs_best }}" > /sys/class/net/{{capture_interface}}/queues/rx-0/rps_flow_cnt
  become: yes
  ignore_errors: yes
  
  
  
