#This playbook acts as the "main" function
#It has to be its own file since the "tasks:" keyword
#can only appear once within all the loops
- name: Packet Capture Experiment
  connection: ssh
  hosts: all
  vars_files: vars.yml
  gather_facts: true

  tasks:
    - name: Determine Capture Interface Driver
      shell: "ethtool -i {{capture_interface}} | awk 'NR == 1 {print $2}'"
      register: capture_interface_driver
      changed_when: false
      become: yes
      when: capture_driver is not defined

    - name: Set Capture Driver Fact
      set_fact:
        capture_driver: "{{capture_interface_driver.stdout_lines[0]}}"
        cacheable: yes
      when: capture_driver is not defined

    - name: Clean Up old Results
      shell: |
          rm -rf {{ sensor_dir }}/*.csv
          rm -rf {{ sensor_dir }}/*.pid
          rm -rf {{ sensor_dir }}/counters
      args:
          warn: false
      become: yes
      
    - name: Begin New Test
      include_tasks: pcap-benchmark-recursive.yml

    - name: Done Looping, Store Final Result
      set_fact:
        pcap_pps_limit: "{{interface_pps_limit|int - target_to_beat|int}}"
        cacheable: yes

    - name: List Variable Final States
      debug:
        msg: "A levels: {{ A_level | to_yaml }} - B levels: {{ B_level | to_yaml }} - C levels: {{ C_level | to_yaml }} - D levels: {{ D_level | to_yaml }} - E levels: {{ E_level | to_yaml }}"

    - name: Display Final Result
      debug:
        msg: "Packet captue PPS Limit: {{ pcap_pps_limit }}"
